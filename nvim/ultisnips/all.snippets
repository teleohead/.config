# Credit goes to @gillescastel
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

# A box
snippet box "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

# begin-end environment
snippet env "begin{} / end{}" b
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

# Inline math
snippet mk "Math" w
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

# Display math
snippet dm "Math" w
\[
$1
\] $0
endsnippet

# Subscripts and superscripts
snippet '([A-Za-z])(\d)' "auto subscript" wr
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wr
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sr "^2" i
^2
endsnippet

snippet cb "^3" i
^3
endsnippet

snippet inv "^-1" i
^{-1}
endsnippet

snippet compl "complement" i
^{c}
endsnippet

snippet td "superscript" i
^{$1}$0
endsnippet

# Fractions
snippet // "Fraction" i
\\frac{$1}{$2}$0
endsnippet

# Bold and emph
snippet bold "Bold" w
\textbf{$0}
endsnippet

snippet emph "Emph" w
\emph{$0}
endsnippet

snippet it "Bullet" w
\item 
endsnippet

snippet chap "Chapter" b
\chapter{$0}
endsnippet

snippet sec "Section" b
\section{$0}
endsnippet

snippet sub "Subsection" b
\subsection{$0}
endsnippet

snippet subs "Subsubsection" b
\subsubsection{$0}
endsnippet

snippet thm "Theorem" b
\begin{thm}
	$0
\end{thm}
endsnippet

snippet prop "Proposition" b
\begin{prop}
	$0
\end{prop}
endsnippet

snippet lem "Lemma" b
\begin{lem}
	$0
\end{lem}
endsnippet

snippet eg "Example" b
\begin{eg}
	$0
\end{eg}
endsnippet

snippet defn "Definition" b
\begin{defn}
	$0
\end{defn}
endsnippet

snippet sets "Sets" i
\{ $0 \}
endsnippet

snippet != "Neq" i
\neq
endsnippet

snippet -> "Rightarrow" i
\rightarrow 
endsnippet

snippet mbb "Mathbb" i
\mathbb{$0}
endsnippet

snippet mbbr "Mathbb R" i
\mathbb{R}
endsnippet

snippet mbbq "Mathbb Q" i
\mathbb{Q}
endsnippet

snippet timestamp "Timestamp"
\emph{Timestamp - `date +%F`}
endsnippet
